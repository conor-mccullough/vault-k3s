packages:
  - jq
  - unzip
  - docker
  - docker-compose
  - gpg

runcmd:
  - sudo useradd -r boundary
#  - adduser --system --group boundary || true
  - mkdir /opt/boundary
  - curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.24.7+k3s1 sh -
  - mkdir -p /home/ubuntu/.kube/
  - echo "export KUBECONFIG=/home/ubuntu/.kube/config" | tee -a /home/ubuntu/.bashrc
  - echo "alias k=\'kubectl\'" | tee -a /home/ubuntu/.bashrc
  - cp /etc/rancher/k3s/k3s.yaml /home/ubuntu/.kube/config
  - chown -R ubuntu:ubuntu /home/ubuntu
#####  - chown ubuntu:ubuntu /home/ubuntu/.kube/config
  - k3s completion bash > /etc/bash_completion.d/k3s
  - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  - wget https://releases.hashicorp.com/boundary-worker/0.12.1+hcp/boundary-worker_0.12.1+hcp_linux_arm64.zip
  - unzip boundary-worker_0.12.1+hcp_linux_arm64.zip
  - cp boundary-worker /usr/local/bin/boundary
#  - bash /home/ubuntu/install.sh

#  - sudo apt update && sudo apt install boundary-enterprise
#  - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
#  - helm completion bash > /etc/bash_completion.d/helm
#  - runuser -l ubuntu -c "helm repo add hashicorp https://helm.releases.hashicorp.com"

#  - chown boundary:boundary /opt/boundary
#  - chown boundary:boundary /usr/local/bin/boundary
#  - kubectl completion bash > /etc/bash_completion.d/kubectl

# Using Ubuntu user because cloud-init runs through things in a weird order and setting this to boundary:boundary causes it to fail
# See https://git.launchpad.net/cloud-init/tree/config/cloud.cfg.tmpl for precedence (init > config)

# Just do it with the ubuntu user for now. Once it's containerized it'll be better.
# pull the github repo with the bootstrap script and run it after you've brought the files in.
# Eventually remove the write_files all together except for if they're needed.. Remember cloud-init is for provisioning, not config management.

write_files:
- path: /home/ubuntu/license.hclic
  content: |
    <license>
  owner: 'ubuntu:ubuntu'
  permissions: '0400'
  defer: true
- path: /etc/systemd/system/boundary.service
  content: |
    [Unit]
    Description="boundary"
    Requires=network-online.target
    After=network-online.target
    ConditionFileNotEmpty=/opt/boundary/boundary.hcl
    [Service]
    User=boundary
    Group=boundary
    PIDFile=/var/run/boundary/boundary.pid
    ExecStart=/usr/local/bin/boundary server -config=/opt/boundary/boundary.hcl
    StandardOutput=file:/var/log/boundary/boundary.log
    StandardError=file:/var/log/boundary/boundary.log
    ExecReload=/bin/kill -HUP $MAINPID
    KillMode=process
    KillSignal=SIGINT
    Restart=on-failure
    RestartSec=42
    TimeoutStopSec=30
    StartLimitInterval=60
    StartLimitBurst=3
    LimitMEMLOCK=infinity
    [Install]
    WantedBy=multi-user.target
  owner: 'root:root'
  permissions: '0644'
#- path: /root/.ssh/known_hosts
#  content: |
#    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
#    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
#    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#  owner: 'root:root'
#  permissions: '0644'
#  defer: true
- path: /etc/systemd/system/boundary-worker.service
  content: |
    [Unit]
    Description="boundary-worker"
    Requires=network-online.target
    After=network-online.target
    ConditionFileNotEmpty=/opt/boundary/boundary.hcl
    [Service]
    User=boundary
    Group=boundary
    PIDFile=/var/run/boundary/boundary.pid
    ExecStart=/usr/local/bin/boundary server -config=/opt/boundary/boundary.hcl -log-level=trace
    StandardOutput=file:/var/log/boundary/boundary.log
    StandardError=file:/var/log/boundary/boundary.log
    ExecReload=/bin/kill -HUP $MAINPID
    KillMode=process
    KillSignal=SIGINT
    Restart=on-failure
    RestartSec=42
    TimeoutStopSec=30
    StartLimitInterval=60
    StartLimitBurst=3
    LimitMEMLOCK=infinity
    [Install]
    WantedBy=multi-user.target
  owner: 'root:root'
  permissions: '0644'
- path: /home/ubuntu/bootstrap.sh
  content: |
    git clone https://github.com/conor-mccullough/boundary-bootstrap.git
  owner: 'ubuntu:ubuntu'
  permissions: '0744'

